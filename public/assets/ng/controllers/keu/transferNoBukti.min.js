var app = angular
          .module('appRoot', ['ngMessages','angularUtils.directives.dirPagination','ngRoute', 'currencyMask', 'ui.bootstrap'])
          .config(function($interpolateProvider){
              $interpolateProvider.startSymbol('[[');
              $interpolateProvider.endSymbol(']]');
          })
        .directive('loading', ['$http',function($http){
          return {
            restrict: 'A',
            link : function(scope, element, attrs){
              scope.isLoading = function(){
                return $http.pendingRequests.length > 0;
              };

              scope.$watch(scope.isLoading, function(value){
                if(value){
                  element.show(); 
                } else{
                  element.hide();
                }
              })
            }
          }
        }]);


app.controller('dataFormController', function($scope, $http, $uibModal, $log) {
  $scope.modalstate = {};
  $scope.parseInt = parseInt;
  $scope.libraryTemp = {};
  $scope.dataForm = {};
  $scope.totalItemsTemp = {};
  $scope.totalItems = 0;
  $scope.subUrl = '';//($scope.jenis == 'penerimaan') ? '/keu/transferPenerimaan' : '/keu/transferPembayaran';
  $modalName ='idModalMst';
  $scope._token = {};
  $scope._pageNumber = 1;
  // $scope.btnTransfer = {};

    $http({
      'method'  : 'GET',
      'url'   : '/token' 
    }).success(function(response){
      //console.log(response);
      $scope._token     = response;
      $scope.initial();
    }).error(function(response){
        //console.log(response);
    });

    $scope.initial = function(){
      $scope.dataForm['param'] = {};
      $scope.dataForm['param']['tahun'] = new Date().getFullYear();
      $scope.btnTransfer = true;      
      $scope.subUrl = ($scope.jenis == 'penerimaan') ? '/keu/transferPenerimaan' : '/keu/transferPembayaran';
    }

    $scope.checkRequirement = function(){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;

      $http({
        'method'  : 'POST',
        'url'     : _url+'/cekData',
        'params'  : { 'bulan' : $scope.dataForm['param']['bulan'], 'tahun' : $scope.dataForm['param']['tahun']},
        'headers' : {'Content-Type': 'application/x-www-form-urlencoded'}
      }).success(function(response){
          console.log(response);
          console.log('jml bukti : '+response.detailTransfer['jmlbukti']);
          $scope.dataForm['coa']    = response.coa;
          $scope.dataForm['faktur'] = response.faktur;
          $scope.dataForm['jmlBukti'] = response.detailTransfer['jmlbukti'];
          $scope.dataForm['totalBukti'] = response.detailTransfer['total'];
          if($.isEmptyObject(response.coa) && $.isEmptyObject(response.faktur)) {
            $scope.btnTransfer = false;
          } else {
            $scope.btnTransfer = true;
          }
      }).error(function(response){
        console.log(response);
      });
    }

    $scope.transfer = function(){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;

      $http({
        'method'  : 'POST',
        'url'     : _url+'/proses',
        'params'  : { 'bulan' : $scope.dataForm['param']['bulan'], 'tahun' : $scope.dataForm['param']['tahun']},
        'headers' : {'Content-Type': 'application/x-www-form-urlencoded'}
      }).success(function(response){
          console.log(response);
          // $scope.dataForm['coa']    = response.coa;
          // $scope.dataForm['faktur'] = response.faktur;
          // $scope.dataForm['tanggal'] = new Date(response['tanggal']);
        $scope.successStatusTransfer = true;
        $scope.errorStatusTransfer = !$scope.successStatusTransfer;

      }).error(function(response){
        // alert('err0r');
        $scope.successStatusTransfer = false;
        $scope.errorStatusTransfer = !$scope.successStatusTransfer;
      });
    }
/*
  $scope.searchDB = function(){
      if($.isEmptyObject($scope._token)) return false;
        if($scope.searchText.length >= 1){
          if($.isEmptyObject($scope.libraryTemp)){
                $scope.libraryTemp = $scope._data;
                $scope.totalItemsTemp = $scope.totalItems;
                $scope._data = {};
          }
          getResultsPage(1);
        }else{
            if(!$.isEmptyObject($scope.libraryTemp)){
                $scope._data = $scope.libraryTemp ;
                $scope.totalItems = $scope.totalItemsTemp;
                $scope.libraryTemp = {};
            }
        }
    } 


  function getResultsPage(pageNumber) {
      $scope.formTampil = false;      
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;
      
      $scope._pageNumber = pageNumber;
      
      if(! $.isEmptyObject($scope.libraryTemp)){
        $http({
          'method'  : 'GET',
          'url'   : _url+'?search='+$scope.searchText+'&page='+pageNumber 
        }).success(function(response){
          //console.log(response);
          $scope._data     = response.data;
          $scope.totalItems   = response.total;
          $scope.table = { TotalItems : response.total, CurrentItems : response.to };
        }).error(function(response){
          //console.log(response);
        });
      }else{
        $http({
          'method'  : 'GET',
          'url'   : _url+'?page='+pageNumber 
        }).success(function(response){
          //console.log(response);
          $scope._data        = response.data;
          $scope.totalItems   = response.total;
          $scope.table        = { TotalItems : response.total, CurrentItems : response.to };
        }).error(function(response){
           //console.log(response);
        });
      }
  }

    //show modal form
    $scope.toggle = function(modalstate, id){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;

      $scope.modalstate = modalstate; 
      
      switch(modalstate){
        case 'add' :
          $scope.idState    = null;
          $scope.form_title = 'Tambah Data';
          $scope.dataForm   = {};
          $scope.formTampil = true;
        break;
        case 'edit' :
          $scope.form_title = 'Edit Data';
          $scope.idState = id;
          $http({
            'method'  : 'POST',
            'url'     : _url+'/pukisdev/edit',
            'params'  : { 'nomor_surat_pajak' : id}
          }).success(function(response){
              // showData(response);
              $scope.dataForm = response;
              $scope.dataForm['tanggal'] = new Date(response['tanggal']);

          }).error(function(response){
            console.log(response);
          });

          $scope.formTampil = true;
        break;
        case 'cancel':
          getResultsPage($scope._pageNumber);
        break; 
        default:
        break;
      }
    }

    $scope.save = function(modalstate, id){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;

      $http({
        'method'  : (id) ? 'PUT' : 'POST',
        'url'     : _url + ((id) ? '/pukisdev' : ''),
        'data'    : $.param($scope.dataForm),
        'headers' : {'Content-Type': 'application/x-www-form-urlencoded'}
      }).success(function(response){
          new PNotify({
              title : 'Berhasil',
              text  : 'Edit Data Berhasil Disimpan',
              type  : 'success'
          });
   
        if(response.nomor_surat_pajak){          
          $scope.dataForm = response;
          $scope.dataForm['tanggal'] = new Date(response['tanggal']);
          $scope.modalstate = 'edit';
          $scope.idState = response.nomor_surat_pajak;
        }

      }).error(function(error){
          new PNotify({
              title : 'Error',
              text  : 'Data Gagal Disimpan',
              type  : 'error'
          });
        console.log(error);
      });
    }

  $scope.confirmDelete = function(_data, _index){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;
      
      var isConfirmDelete = confirm('Anda yakin mau menghapus data ini?');
      if(isConfirmDelete){
        $http({
          'method'  : 'DELETE',
          'url'     : _url+'/pukisdev', 
          'data'    : $.param(_data),
          'headers' : {'Content-Type': 'application/x-www-form-urlencoded'}
        }).success(function(response){
          $scope._data.splice(_index,1);
            new PNotify({
              title : 'Berhasil',
              text  : 'Data Berhasil Dihapus',
              type  : 'success'
          });
        }).error(function(response){
          //console.log(response);
          new PNotify({
              title : 'Gagal',
              text  : 'Data Gagal Dihapus',
              type  : 'error'
          });
        });
      }
    }

*/
});

app.directive('formData', function (){
    return{
        restirct    : 'A',
        templateUrl : '/assets/ng/views/keu/form/formNomorFPajak.html',
    };
});

app.directive('lovCustomer', function (){
    return{
        restirct    : 'A',
        templateUrl : '/ext/ng-html/PMS/lov/lovCustomer.html',
    };
});


function apiModifyTable(originalData,id,response){
    angular.forEach(originalData, function (item,key) {
      // console.log(item.id_customer +' \\ '+key+' / '+id);
        if(item.no == id){
            originalData[key] = response;
        }
    });
    return originalData;
}

// $(function () {
//   $('.dial').knob({
//      min: '0',
//      max: '100',
//      readOnly: true
//   });
// });

// startKnob =  function() {
//   $('.dial').animate({
//       value: $('.dial').data('number')
//   },{
//       duration: 950,
//       easing: 'swing',
//       progress: function () {
//                  $('.dial').val(Math.round(this.value)).trigger('change');
//      }
//  });
// }

// $('.startKnob').bind('inview', startKnob);