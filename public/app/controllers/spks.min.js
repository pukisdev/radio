var app = angular
          .module('appRoot', ['ngMessages','ngSanitize', 'angularUtils.directives.dirPagination','ngRoute', 'ngMask','rte-angular','ngFileUpload'])
          .config(function($interpolateProvider){
              $interpolateProvider.startSymbol('[[');
              $interpolateProvider.endSymbol(']]');
          })
        .directive('loading', ['$http',function($http){
          return {
            restrict: 'A',
            link : function(scope, element, attrs){
              scope.isLoading = function(){
                return $http.pendingRequests.length > 0;
              };

              scope.$watch(scope.isLoading, function(value){
                if(value){
                  element.show(); 
                } else{
                  element.hide();
                }
              })
            }
          }
        }]);


app.controller('spksController', function($scope, $http, $sce, Upload) {
  $scope.parseInt = parseInt;
  $scope.libraryTemp = {};
  $scope.dataForm = {};
  $scope.totalItemsTemp = {};
  $scope.totalItems = 0;
  $scope.subUrl = '/hkm/spks';
  $modalName ='idModalMst';
  $scope._token = {};
  $scope._pageNumber = 1;

    $http({
      'method'  : 'GET',
      'url'   : '/token' 
    }).success(function(response){
      // console.log(response);
      $scope._token     = response;

      //retrieve employees listing from API
      getResultsPage($scope._pageNumber);

    }).error(function(response){
        console.log(response);
    });


    //show modal form
    $scope.toggle = function(modalstate, id){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;

      $scope.modalstate = modalstate; 

      switch(modalstate){
        case 'add' :
          $scope.form_title = 'Tambah Data';
          $scope.dataForm = {};
          // $scope.dataForm['fp_det'] = [1];
          $http.get(_url+"/" + null+'/apv')
            .success(function(response){
              console.log(response);
              $scope.dataForm['apv'] = response;
            });
          $scope.formTampil = true;
        break;
        case 'edit' :
          $scope.form_title = 'Edit Data';
          $scope.idState = id;
          // $http.get(API_URL + $scope.subUrl+"/" + id)
          $http.get(_url+"/" + id+'/edit')
            .success(function(response){
              showData(response);
            });
          $scope.formTampil = true;      
        break;
        case 'cancel':
          getResultsPage($scope._pageNumber);
        break; 
        default:
        break;
      }
      // $('#'+$modalName).modal('show');
    }

    $scope.save = function(modalstate, id){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;

      var _method = (modalstate === 'edit') ? 'PUT' : 'POST';
      
      $scope.dataForm['keterangan'] = $scope.dataForm['keterangan'].toString();

        Upload.upload({
            url: _url,
            data: $scope.dataForm
        }).then(function (response) {
            showData(response.data);
            // console.log('Success ' + resp.config.data.file.name + 'uploaded. Response: ' + resp.data);
        }, function (resp) {
            console.log('Error status: ' + resp.status);
        }, function (evt) {
            // var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);
            // console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);
        });
        // function apiModifyTable(originalData,id,response){
            // angular.forEach($scope.dataForm, function (item,key) {
            //   console.log(item +' \\ '+key);
            //   formdataNew.append(key, item);
                // if(item.id_customer == id){
                //     originalData[key] = response;
                // }
            // });
        //     return originalData;
        // }

      // console.log(formdataNew); 
      // formdata.append('draft', $scope.dataForm['draft']);
      
      // $scope.getTheFiles = function ($files) {
      //     angular.forEach($files, function (value, key) {
      //         formdata.append(key, value);
      //     });
      // };


      // $scope.dataForm['file'] = file;
      // console.log($scope.dataForm);
      // $http({
      //   'method'  : _method,
      //   'url'     : _url + ((modalstate ==='edit') ? '/'+id : ''),
      //   // 'data'    : $.param($scope.dataForm),
      //   'data'    : $scope.dataForm,
      //   'headers' : {'Content-Type': undefined}
      //   // 'headers' : {'Content-Type': 'application/x-www-form-urlencoded'}
      // }).success(function(response){
      //   // console.log(response);
      //   if(modalstate === 'edit') {
      //     // $scope._data = apiModifyTable($scope._data, response.id_customer, response);
      //   }
      //   else {
      //     // console.log(response);
      //     // $scope._data.push(response);
      //   }
          
      //   $('#'+$modalName).modal('hide');
      //   $.gritter.add({
      //         title: 'Application',
      //         text: 'Data Berhasil Disimpan',
      //         fade_out_speed: 5000
      //     });
      // }).error(function(error){
      //   console.log(error);
      // });

    }

/*
    $scope.confirmDelete = function(_data, _index){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;
      
      var isConfirmDelete = confirm('Anda yakin mau menghapus data ini?');
      if(isConfirmDelete){
        $http({
          'method'  : 'DELETE',
          'url'     : _url+'/'+_data.id_customer 
          // 'url'     : API_URL+$scope.subUrl+'/'+_data.id_customer 
        }).success(function(response){
          $scope._data.splice(_index,1);
          $.gritter.add({
                title: 'Application',
                text: 'Data Berhasil Dihapus',
                fade_out_speed: 5000
            });
        }).error(function(response){
          console.log(response);
          $.gritter.add({
                title: 'Application',
                text: 'Data Gagal Dihapus',
                fade_out_speed: 5000
            });
        });
      }
    }
  
    $scope.searchDB = function(){
      if($.isEmptyObject($scope._token)) return false;
        if($scope.searchText.length >= 1){
          // console.log($scope.libraryTemp);
          if($.isEmptyObject($scope.libraryTemp)){
                $scope.libraryTemp = $scope._data;
                $scope.totalItemsTemp = $scope.totalItems;
                $scope._data = {};
          }
          getResultsPage(1);
        }else{
          // console.log('masuk');
            if(!$.isEmptyObject($scope.libraryTemp)){
                $scope._data = $scope.libraryTemp ;
                $scope.totalItems = $scope.totalItemsTemp;
                $scope.libraryTemp = {};
            }
        }
    }

*/
  $scope.pageChanged = function(newPage) {
    getResultsPage(newPage);
  };

  $scope.lovSelected = function(idModal, _element){
    
    if($.isEmptyObject($scope.dataForm)){
      $scope.dataForm = {};
    }

    angular.forEach(_element, function (item,key) {
      // console.log(key + '||' +key.indexOf('id'));
      key = (key.indexOf('id') > -1) ? 'f_'+key.substr(3) : key;
      $scope.dataForm[key] = item;
    });
    
    $('#'+idModal).modal('hide');
  }

  $scope.showModal = function (idModal){
    $('#'+idModal).modal('show');
  }

  $scope.selectFile = function(_name){
    // console.log($scope.dataForm[_name].name);
    $scope.dataForm[_name.slice(1)] =  $scope.dataForm[_name].name;
  }

  $scope.getFiles = function(_name){
    var _url = $scope._token['url']+ $scope.subUrl;
    if($.isEmptyObject($scope._token)) return false;
    window.open(_url+'/files/'+_name+'/'+$scope.dataForm[_name], '_blank'); 
  }

  $scope.deleteFiles = function(_name){
    var _url = $scope._token['url']+ $scope.subUrl;
    if($.isEmptyObject($scope._token)) return false;
    
    var isConfirmDelete = confirm('Anda yakin mau menghapus file ini?');
    if(isConfirmDelete){
      $http({
        'method'  : 'DELETE',
        'url'     : _url+'/files/'+$scope.dataForm['id_spks']+'/'+_name+'/'+$scope.dataForm[_name] 
      }).success(function(response){
        // $scope._data.splice(_index,1);
        $scope.dataForm[_name] = '';
        $.gritter.add({
              title: 'Application',
              text: 'Data Berhasil Dihapus',
              fade_out_speed: 5000
          });
      }).error(function(response){
        // console.log(response);
        $.gritter.add({
              title: 'Application',
              text: 'Data Gagal Dihapus',
              fade_out_speed: 5000
          });
      });
    }
  }

  $scope.setApv = function(_answer, _index){
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;

      console.log(_answer+'/'+_index);
      $http({
        'method'  : 'PUT',
        'url'     : _url+'/'+$scope.dataForm['id_spks']+'/apv', 
        'data'    : { 'jawaban' : _answer, 'komentar' : $scope.dataForm['apv'][_index]['komentar'], 'apv_nip' : $scope.dataForm['apv'][_index]['apv_nip'] },
        // 'headers' : {'Content-Type': 'application/x-www-form-urlencoded'}
      }).success(function(response){
        $scope.dataForm['apv'][_index]['apv_status']=_answer;
        // // console.log(response);
        // $scope._data     = response.data;
        // $scope.totalItems   = response.total;
        // $scope.table = { TotalItems : response.total, CurrentItems : response.to };
      }).error(function(response){
        console.log(response);
      });

  }  

  function getResultsPage(pageNumber) {
      $scope.formTampil = false;      
      var _url = $scope._token['url']+ $scope.subUrl;
      if($.isEmptyObject($scope._token)) return false;
      
      $scope._pageNumber = pageNumber;
      
      if(! $.isEmptyObject($scope.libraryTemp)){
        $http({
          'method'  : 'GET',
          'url'   : _url+'?search='+$scope.searchText+'&page='+pageNumber 
        }).success(function(response){
          // console.log(response);
          $scope._data     = response.data;
          $scope.totalItems   = response.total;
          $scope.table = { TotalItems : response.total, CurrentItems : response.to };
        }).error(function(response){
            console.log(response);
        });
      }else{
        $http({
          'method'  : 'GET',
          // 'method'  : 'JSONP',
          'url'   : _url+'?page='+pageNumber 
        }).success(function(response){
          // console.log(response);
          $scope._data     = response.data;
          $scope.totalItems   = response.total;
          $scope.table = { TotalItems : response.total, CurrentItems : response.to };
        }).error(function(response){
          console.log(response);
        });
      }
  }

  function showData(_dataSpks){
    $scope.dataForm               = [];
    $scope.dataForm               = _dataSpks.master;
    $scope.dataForm['tgl_awal']   = new Date(_dataSpks.master['tgl_awal']);
    $scope.dataForm['tgl_akhir']  = new Date(_dataSpks.master['tgl_akhir']);
    $scope.dataForm['nama_customer']  = _dataSpks.master['customer']['nama_customer'];
    $scope.dataForm['keterangan'] = $sce.trustAsHtml(_dataSpks.master['keterangan']);

    for(isi in _dataSpks.detail){
      _dataSpks.detail[isi]['nip_alias'] =  _dataSpks.detail[isi]['pegawai']['nip_alias'];
      _dataSpks.detail[isi]['nama']      =  _dataSpks.detail[isi]['pegawai']['nama'];
      _dataSpks.detail[isi]['nip_sys']   =  _dataSpks.detail[isi]['pegawai']['nip_sys'];
    }
    $scope.dataForm['apv']        = _dataSpks.detail;
  }

});

app.directive('formSpks', function (){
    return{
        restirct    : 'A',
        templateUrl : '/ext/ng-html/hkm/form/formSpks.html',
    };
});

app.directive('lovCustomer', function (){
    return{
        restirct    : 'A',
        templateUrl : '/ext/ng-html/PMS/lov/lovCustomer.html',
    };
});

function apiModifyTable(originalData,id,response){
    angular.forEach(originalData, function (item,key) {
      // console.log(item.id_customer +' \\ '+key+' / '+id);
        if(item.id_customer == id){
            originalData[key] = response;
        }
    });
    return originalData;
}